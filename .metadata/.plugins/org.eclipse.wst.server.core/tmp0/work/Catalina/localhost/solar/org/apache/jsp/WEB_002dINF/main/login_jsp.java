/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2017-05-15 06:49:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"/solar/static/lib/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script src=\"/solar/static/lib/jquery.serializeJSON.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("input[type=text], input[type=password] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    margin: 8px 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".loginbtn{\r\n");
      out.write(" \twidth: auto;\r\n");
      out.write(" \tcolor : white;\r\n");
      out.write(" \tfont-weight:bold;\r\n");
      out.write(" \tmargin-left : 25%;\r\n");
      out.write("    padding: 10px 18px;\r\n");
      out.write("    background-color: #00802b;\r\n");
      out.write("}\r\n");
      out.write(".joinbtn {\r\n");
      out.write("\twidth: auto;\r\n");
      out.write(" \tcolor : white;\r\n");
      out.write(" \tfont-weight:bold;\r\n");
      out.write("    padding: 10px 18px;\r\n");
      out.write("    background-color: #b30000;\r\n");
      out.write("}\r\n");
      out.write(".imgcontainer {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin: 24px 0 12px 0;\r\n");
      out.write("    margin-top: 8%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("\tborder: 3px solid #f1f1f1;\r\n");
      out.write("    padding: 16px;\r\n");
      out.write("    width : 20%;\r\n");
      out.write("    margin-left: 40%;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* Change styles for span and cancel button on extra small screens */\r\n");
      out.write("@media screen and (max-width: 300px) {\r\n");
      out.write("    span.psw {\r\n");
      out.write("       display: block;\r\n");
      out.write("       float: none;\r\n");
      out.write("    }\r\n");
      out.write("    .cancelbtn {\r\n");
      out.write("       width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>SOLAR MAIN</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form id=\"loginForm\" action=\"/solar/login/process\" method=\"POST\" >\r\n");
      out.write("  <div class=\"imgcontainer name=\"imgDiv\">\r\n");
      out.write("    <img src=\"/solar/static/images/logo.png\" >\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <label><b>Username</b></label>\r\n");
      out.write("    <input type=\"text\" name=\"id\" placeholder=\"아이디\" />\r\n");
      out.write("\r\n");
      out.write("    <label><b>Password</b></label>\r\n");
      out.write("    <input type=\"password\" placeholder=\"Enter Password\" name = \"pw\" required>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"container\" style=\"background-color:#f1f1f1\">\r\n");
      out.write("    <input type=\"button\" value=\"log in\" class=\"loginbtn\" name=\"login\" />\r\n");
      out.write("    <a href=\"/solar/joinForm\"><input type=\"button\" value=\"join\" class=\"joinbtn\" name=\"join\" /></a>\r\n");
      out.write("  </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<!--  <form id=\"loginForm\" action=\"/solar/login/process\" method=\"POST\" >\r\n");
      out.write("  <input type=\"text\" name=\"id\" placeholder=\"아이디\" />\r\n");
      out.write("  <input type=\"password\" name = \"pw\" placeholder=\"비밀번호\" />\r\n");
      out.write("  <input type=\"button\" value=\"로그인\" name=\"login\" />\r\n");
      out.write(" </form> -->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\r\n");
      out.write(" $(\"input[type='button'][name='login']\").click(function(){\r\n");
      out.write("  var $json = JSON.stringify($('#loginForm').serializeJSON());\r\n");
      out.write("  \r\n");
      out.write("   $.ajax({\r\n");
      out.write("   type:\"POST\",\r\n");
      out.write("   url:\"/solar/login/auth\",\r\n");
      out.write("   data:$json,\r\n");
      out.write("   success:function(data,status,xhr){\r\n");
      out.write("    console.log(\"성공\");\r\n");
      out.write("    $(\"#loginForm\").submit();\r\n");
      out.write("   },\r\n");
      out.write("   async: false,\r\n");
      out.write("   error:function(xhr,status,error){\r\n");
      out.write("    console.log(\"error : \"+xhr.status);\r\n");
      out.write("    if(xhr.status==404)\r\n");
      out.write("     alert(\"아이디를 찾을수 없습니다.\");     \r\n");
      out.write("    else if(xhr.status==400)\r\n");
      out.write("     alert(\"비밀번호를 확인해주세요\"); \r\n");
      out.write("    else\r\n");
      out.write("     alert(\"error : \"+xhr.status+\" 통신에 실패하였습니다.\");\r\n");
      out.write("   },\r\n");
      out.write("   contentType:\"application/json\"\r\n");
      out.write("  });   \r\n");
      out.write("  \r\n");
      out.write(" });\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
