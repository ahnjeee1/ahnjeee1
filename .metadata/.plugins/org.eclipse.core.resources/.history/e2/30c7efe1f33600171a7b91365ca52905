package controller;

import java.sql.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import entity.Interface;
import repository.InterfaceRepository;

@Controller
@RequestMapping("/interface")
public class InterfaceController {
	
	private final static Logger log = LoggerFactory.getLogger(InterfaceController.class);
	
	@Autowired
	InterfaceRepository interfaceRepository;
	
	//인터페이스 페이지로 이동
	@RequestMapping(method=RequestMethod.GET)
	public String interfaceListPageGET(){
		return "interface/interfaceList";
	}
	
	//인터페이스 정보 등록
	@RequestMapping(method=RequestMethod.POST)
	public @ResponseBody void interfaceRegisterPOST(@RequestBody Interface interFace){
		interFace.setUpDate(new Date(System.currentTimeMillis()));
		interFace.setRegistDate(new Date(System.currentTimeMillis()));
		interfaceRepository.insertInterface(interFace);
	}
	
	//아이디에 해당하는 인터페이스 정보를 가져옴
	@RequestMapping(value="/{id}",method=RequestMethod.GET)
	public @ResponseBody Interface interfacerInfoGET(@PathVariable("id") Long id, Model model){
		Interface interFace= interfaceRepository.getInterface(id);
		return interFace;
	}
	
	//인터페이스 목록 가져옴
	@RequestMapping(value="/list",method=RequestMethod.GET)
	public @ResponseBody List<Interface> interfaceListGET(){
		return interfaceRepository.getInterfaceList();
	}
	
	//인터페이스 정보를 수정 
	@RequestMapping(method=RequestMethod.PUT)
	public @ResponseBody void interfaceUpdatePUT(@RequestBody Interface interFace){
		interfaceRepository.updateInterface(interFace);
	}
	
	//인터페이스 정보를 삭제
	@RequestMapping(method=RequestMethod.DELETE)
	public @ResponseBody void interfaceDelete(@RequestBody Interface interFace){
		interfaceRepository.deleteInterface(interFace);
	}
}
