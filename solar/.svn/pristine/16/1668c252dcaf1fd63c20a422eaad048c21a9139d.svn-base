package repository.internal;


import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import entity.Member;
import repository.MemberRepository;

@Repository
public class MemberRepositoryImpl implements MemberRepository{

	@Autowired
	private SessionFactory sessionFactory;
	
	@Transactional
	@Override
	public List<Member> getMemberList() {
		Session session = sessionFactory.getCurrentSession();
		Query query= session.createQuery("select m from Member m");
		List<Member> list = query.list();
		return list;
	}

	@Transactional
	@Override
	public void insertMember(Member member) {
		Session session = sessionFactory.getCurrentSession();
		session.save(member);
	}

	@Transactional
	@Override
	public Member selectOne(String id) {
		Session session = sessionFactory.getCurrentSession();
		List<Member> members=session.createQuery("select m from Member m where m.id = :id")
							.setParameter("id",id)
							.list();
		return members.get(0);
	}

	@Transactional
	@Override
	public void updateMember(Member member) {
		Session session = sessionFactory.getCurrentSession();
		session.update(member);
	}
	
	@Transactional
	@Override
	public void deleteMember(Member member){
		Session session = sessionFactory.getCurrentSession();
		session.delete(member);
	}
}
